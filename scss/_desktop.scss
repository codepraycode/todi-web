@use './variables' as *;
*,
*::before,
*::after {
    box-sizing: border-box;
    font-family: $font-fm;
    // 
    transition: all .5s ease;
}

:root {
    color-scheme: dark light;
}

body {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    font-weight: $fw-400;
}

h1,
p {
    margin: 0;
}

a {
    font-weight: 500;
    // color: $dark-grayish-blue;
    text-decoration: none;
    font-weight: $fw-700;
}

h1 {
    letter-spacing: .7rem;
    font-size: 2rem;
    text-transform: uppercase;
}

 button {
     width: 150px;
     max-width: 70%;

     padding-block: .9rem;

     border-width: 1px;
     border-style: solid;

     border-radius: .3rem;

     cursor: pointer;
     color: inherit;
 }

input {
    // background-color: red;
    // padding: .5rem;
    outline: none;
    border: 0;
    font-size: .8rem;
    width: 100%;
    font-size: .9rem;
    font-weight: $fw-700;
    // color: $very-dark-grayish-blue;
    background-color: transparent;
    // line-height: 1.5rem;
}

header {
    height: 45vh;
    width: 100%;
    // 
    margin: 0;
    position: relative;
    top: -21px;
    left: 0;
    // 
    background-position: center center;
    background-repeat: no-repeat;
    background-size: auto;
    // 
    // color: $white;
    .header__content {
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        row-gap: 2.5rem;
        &--title {
            display: flex;
            align-items: center;
            justify-content: space-between;
            // background-color: green;
            width: 100%;

            h1{
                margin-right: auto;
            }

            span:first-of-type{
                margin-right: 1rem;
                display: block;
                max-width: 8rem;
                text-overflow: ellipsis;
                overflow: hidden;
                font-weight: 400;

                color: inherit;
                a{
                    color: inherit;
                }
            }
        }
    }
    
    #theme-cog {
        display: block;
        width: 25px;
        height: 25px;
        background-color: transparent;
        background-position: center center;
        background-repeat: no-repeat;
        background-size: cover;
        cursor: pointer;
    }
}

section {
    margin: 0 25rem ;
    max-width: 100%;
}

section.authentication{
    margin: 0;
    position: fixed;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    visibility: hidden;

    transition-duration: 0s;

    .authentication__content{
        transform: translateY(-250%);
        border-radius: .3rem;

        width: 450px;
        max-width: 90%;

        padding: 2rem;

        position: relative;

        #closeModal {
            font-size: 2.3rem;
            position: absolute;
            top: 10%;
            right: 10%;
            transform: rotate(45deg);
            cursor: pointer;
            user-select: none;
        }

        button{
            display: block;
            margin: 0 auto;
        }

        .alternative{
            font-size: .8rem;
            display: block;
            text-align: center;
            margin-top: .8rem;
            a{
                cursor: pointer;
            }
        }

        .alsin{
            display: flex;
            align-items: center;
            justify-content: space-between;
            flex-direction: column;

            gap: 15px;
        }

    }

    &[data-show="true"] {
        
        visibility: visible;

        .authentication__content {
            transform: translateY(0%);
        }
    }
}

.form_group{
    margin: 15px 0;
    
    
    width: 100%;
    max-width: 100%;
    height: 60px;
    padding: 0 .5rem;

    overflow: hidden;

    border-radius: .3rem;
    position: relative;

    display: flex;
    justify-content: flex-end;
    flex-direction: column;

    input{
        padding-top: 2rem;
        width: 100% !important;
        height: 100%;
        z-index: 2;

        &::placeholder{
            opacity: 0;
        }
    }

    label{
        position: absolute;
        top: 5px;
        left: 10px;
        transform: translateY(17px);
        transition: all .5s ease;
        z-index: 1;
    }

    &:focus-within > label,
    input:not(:placeholder-shown) + label{
        transform: translateY(0px);
        font-size: .8rem;
    }
}

form{
    .err{
        color: rgb(175, 40, 40);
        font-weight: bold;
    }
    &[data-loading="true"]{
        input,
        button{
            opacity: .7;
            cursor: not-allowed;
        }
    }
}

.task {
    display: flex;
    align-items: center;    
    width: 100%;
    max-width: 100%;
    padding: 1.4rem 1rem;
    border-radius: .3rem;
    position: relative;
    &[draggable="true"] {
        cursor: move;
        &.dragging {
            opacity: .5;
        }
    }
    & .checker {
        content: "";
        // position: absolute;
        width: 20px;
        height: 20px;
        margin-right: 1.2rem;
        border-width: 1px;
        border-style: solid;
        border-radius: 50%;
    }
}

.task-items {
    position: relative;
    top: -4rem;
    // background-color: $white;
    border-radius: .3rem;
    // box-shadow: $shadow;
    max-width: 100%;
    // overflow-x: hidden;

    .loader{
        display: block;
        position: absolute;
        width: 100%;
        top: -5px;
        left: 0;
        height: 5px;
        border-radius: .3rem .3rem 0 0;
        background: $checkbox-background-opaque;

        overflow: hidden;
        visibility: hidden;

        &::before {
            position: absolute;
            content: "";    
            width: 100px;
            height: 100%;
            border-radius: .3rem .3rem 0 0;

            background: $checkbox-background;
            animation: oscillate 1.8s linear infinite;

            display: none;
        }
    }

    &[data-loading="true"]{
        border-top-left-radius: 0;
        border-top-right-radius: 0;

        & .loader{
            visibility: visible;

            &::before{
                display: block;
            }
        }
    }
}


.task-error{
    // background-color: red;
    height: 200px;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    row-gap: 30px;

    p{
        color: inherit;
        font-weight: bold;
    }

   
}

.task__group {
    max-width: 100%;

    // Tasks not in header
    .task {
        border-radius: 0;
        border-bottom-width: 1px;
        border-bottom-style: solid;
        background-color: inherit;

        &.loading{

            p{

                // background-size: 200% 100%;
                
                animation: 1.9s tasksShimmer linear infinite;
                width: 80%;
                max-height: 100%;
                height: 15px;
            }
        }
        //
        &:first-of-type {
            border-radius: .3rem .3rem 0 0;
        }
        //         
        // 
        p {
            margin-right: auto;
            cursor: pointer;
            // color: $very-dark-grayish-blue;
        }
        // 
        & .checker {
            cursor: pointer;
            background-repeat: no-repeat;
            background-position: center center;
            background-size: 50%;
            // border-color: transparent;
            img {
                visibility: hidden;
            }
        }
        & .canceler {
            content: "";
            width: 14px;
            height: 14px;
            cursor: pointer;
            margin-right: .5rem;
            background-repeat: no-repeat;
            background-position: center center;
            background-image: url('/images/icon-cross.svg');
            background-size: contain;
            // background-size: 50%;
            // border-color: transparent;
            visibility: hidden;
            z-index: 2;
        }
        &[data-completed="true"] {
            p {
                // color: $light-grayish-blue;
                text-decoration: line-through;
            }
            & .checker {
                // content: ;
                // content: url('/images/icon-check.svg');
                display: flex;
                align-items: center;
                justify-content: center;
                background: $checkbox-background;
                border-color: $checkbox-background;
                // background: linear-gradient( to right, red 20%, orange 20% 40%, yellow 40% 60%, green 60% 80%, blue 80%);
                img {
                    visibility: visible;
                }
            }
        }
        &:hover {
            & .checker {
                border-color: $checkbox-background;
            }
            & .canceler {
                visibility: visible;
            }
        }

        
    }
}

.task__actions {
    // background-color: red;
    margin-top: .7rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem;
    font-size: .8rem;
    max-width: 100%;
    .links {
        display: flex;
        // background-color: red;
        width: fit-content;
        a {
            display: block;
            margin-right: .5rem;
            margin-left: .5rem;
        }
    }
}

footer {
    position: relative;
    top: -2rem;
    section {
        display: flex;
        flex-direction: column;
        align-items: center;
        span {
            display: block;
            font-size: .9rem;
        }
        .attribution {
            margin-top: 1.5rem;
            font-size: .55rem;
        }
    }
}


@keyframes oscillate {
    0% {
        visibility: visible;
        left: 0%;
    }

    20% {
        left: 20%;
        width: 60px;
    }

    40% {
        left: 40%;
        width: 100px;
    }

    60% {
        left: 60%;
        width: 80px;
    }

    80% {
        left: 80%;
        width: 60px;
    }

    100% {
        visibility: hidden;
        left: 100%;
        width: 100px;
    }
}

@keyframes tasksShimmer {
    to {
        background-position: -200%;
    }
}